name: release lofo

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  release:
    # Only run if the PR was merged (not just closed)
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build
        run: bun run build

      - name: Get version from package.json
        id: package_version
        run: |
          version=$(node -p "require('./package.json').version")
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Create Git Tag
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git tag -a v${{ env.VERSION }} -m "Release v${{ env.VERSION }}"
          git push origin v${{ env.VERSION }}

      - name: Generate Release Notes
        id: release_notes
        run: |
          # Get commit messages since last release
          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "## What's Changed in v${{ env.VERSION }}" >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          # Get PR title and number
          echo "* ${{ github.event.pull_request.title }} (#${{ github.event.pull_request.number }})" >> $GITHUB_ENV
          # Get all commit messages in this PR
          git log --pretty=format:"* %s" ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          body: ${{ env.CHANGELOG }}
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup .npmrc
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc

      - name: Publish to NPM
        run: bunx npm publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
